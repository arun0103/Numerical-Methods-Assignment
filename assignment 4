// PROGRAM TO CALCULATE THE DERIVATIVE AND ROOT OF THE POLYNOMIAL USING NEWTON RAPHSON METHOD

#include<stdio.h>
#include<conio.h>

int count =0;

int * derivative ( int * fn, int size) // function to calculate derivate of fn
{
    int i;
    int* out=(int*)malloc(sizeof(int)*(size-1));
    for( i = size ; i>=0 ; i--)
    {
         out[i-1] = fn[i]*i;
    }
    count++;
    return (out);
}
float fnValue( int *fn, int size, int x)
{
       float fnVal=0;
       int i;
       for(i=0;i<=size;i++)
       {
            fnVal += pow(x,i)*fn[i];                   
       }
       return fnVal;
}
       
void printPolynomial( int *polynomial, int size)
{
    int i;
    for(i=size;i>=0;i--)
    {
         if(polynomial[i]>=0)
              printf("+");
         printf("%dx^%d ",polynomial[i],i);
    } 
}

int main(void)
{
    int n,i;
    n=3;
    int fn[]={10,-9,3,4};
    float x0=2, x1, fx0, fx1, er;
    /*printf("\nEnter The initial guess x0:");
    scanf("%f",&x0);*/
    printf("\nFn(x) : ");
    printPolynomial(fn,n);
    
    int *fd = derivative(fn, n);
    fx1= fnValue(fd,n-1,x0);
    fx0 = fnValue(fn,n,x0);
    
    while(1)
    {
            x1 = x0 -fx0/fx1;
            er = (x1-x0)/x1;
            if(er> 0.05)
            {
                   x0 = x1;
            }
            else
            {
                printf("\nThe root is %f",x1);
                break;
            }
    }
    getch();
    return 0;
}
